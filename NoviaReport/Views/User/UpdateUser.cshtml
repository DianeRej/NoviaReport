@model NoviaReport.Models.User
@{
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>CreateUser</title>
</head>
<body>
    @using (Html.BeginForm())

    //pour l'id faire un input hidden
    {
        <fieldset>
            <legend>Ajouter un utilisateur : </legend>
            <!-- texts box pour le login, le mot de passe, le prénom, le nom, et les infos dans contact -->
        @Html.LabelFor(m => Model.Login)
            @Html.TextBoxFor(m => Model.Login)
            @Html.ValidationMessageFor(m => Model.Login)

            <br />
            @Html.HiddenFor(m => Model.Password)

            <br />
            <p>Identité </p>
            @Html.LabelFor(m => Model.Firstname)
            @Html.TextBoxFor(m => Model.Firstname)
            @Html.ValidationMessageFor(m => Model.Firstname)
            <br />
            @Html.LabelFor(m => Model.Lastname)
            @Html.TextBoxFor(m => Model.Lastname)
            @Html.ValidationMessageFor(m => Model.Lastname)
            <br />
            <p>Contact </p>

            @Html.HiddenFor(m=> Model.Contact.Id)
            @Html.HiddenFor(m=> Model.ContactId)
            @Html.LabelFor(m => Model.Contact.PersonalMail)
            @Html.TextBoxFor(m => Model.Contact.PersonalMail)
            @Html.ValidationMessageFor(m => Model.Contact.PersonalMail)
            <br />
            @Html.LabelFor(m => Model.Contact.PersonalPhone)
            @Html.TextBoxFor(m => Model.Contact.PersonalPhone)
            @Html.ValidationMessageFor(m => Model.Contact.PersonalPhone)
            <br />
            @Html.LabelFor(m => Model.Contact.ProMail)
            @Html.TextBoxFor(m => Model.Contact.ProMail)
            @Html.ValidationMessageFor(m => Model.Contact.ProMail)
            <br />
            @Html.LabelFor(m => Model.Contact.ProPhone)
            @Html.TextBoxFor(m => Model.Contact.ProPhone)
            @Html.ValidationMessageFor(m => Model.Contact.ProPhone)
            <br />
            <p>Adresse</p>
            @Html.LabelFor(m => Model.Contact.Street)
            @Html.TextBoxFor(m => Model.Contact.Street)
            @Html.ValidationMessageFor(m => Model.Contact.Street)
            <br />
            @Html.LabelFor(m => Model.Contact.PostalCode)
            @Html.TextBoxFor(m => Model.Contact.PostalCode)
            @Html.ValidationMessageFor(m => Model.Contact.PostalCode)
            <br />
            @Html.LabelFor(m => Model.Contact.City)
            @Html.TextBoxFor(m => Model.Contact.City)
            @Html.ValidationMessageFor(m => Model.Contact.City)
            <br />

            @Html.HiddenFor(m=>Model.ProfessionalInfo.Id)
            @Html.HiddenFor(m=>Model.ProfessionalInfoId)
            <!-- liste déroulante et check box pour les infos pro et le manager -->
            <legend>Rôle de l'employé</legend>
            @foreach (var item in Enum.GetValues(typeof(NoviaReport.Models.Type)))
            {
                @*mettre un commentaire pour expliquer le fonctionnement*@
                bool isChecked = false;
                foreach (NoviaReport.Models.Role itemBis in ViewData["RoleList"] as List<NoviaReport.Models.Role>)
                {
                    if (itemBis.Type.Equals(item))
                    {
                        isChecked = true;
                        break;
                    }
                }
                <div>
                    <input type="checkbox" id=@item value=@item name="Roles" checked=@isChecked />
                    <label id="@item ">@item</label>
                </div>
            }
            <br />

            @*Explication du fontcionnement à mettre ici*@

            @Html.LabelFor(m => Model.ProfessionalInfo.Position)
            <select id="Position" name="ProfessionalInfo.Position">
                <option value="">Position</option>
                @foreach (var item in Enum.GetValues(typeof(NoviaReport.Models.Position)))
                {
                    bool positionIsChecked = false;

                    if (Model.ProfessionalInfo.Position.Equals(item))
                    {
                        positionIsChecked = true;
                    }

                    <option value=@item name="Position" selected=@positionIsChecked>@item</option>
                }
            </select>
            <br />

            @Html.LabelFor(m => Model.ProfessionalInfo.Function)
            <select id="Function" name="ProfessionalInfo.Function">
                <option value="">Function</option>
                @foreach (var item in Enum.GetValues(typeof(NoviaReport.Models.Function)))
                {
                    bool functionIsChecked = false;
                    if (Model.ProfessionalInfo.Function.Equals(item))
                    {
                        functionIsChecked = true;
                    }
                    <option value=@item name="Function" selected=@functionIsChecked>@item</option>
                }
            </select>
            <br />

            @*Surement un problème de format à voir si le problème a été réglé pour le CRA*@
            @Html.LabelFor(m => Model.ProfessionalInfo.DateOfArrival)
            @Html.TextBoxFor(m=>Model.ProfessionalInfo.DateOfArrival,"{0:yyyy-MM-dd}" ,new{@type="date"})
@*            <input id="ProfessionalInfo.DateOfArrival" type="date" value=@Model.ProfessionalInfo.DateOfArrival />*@
            <br />

            @Html.LabelFor(m => Model.ManagerId)
            <select id="ManagerId" name="ManagerId">
                <option value="">--Choisissez une option--</option>
                <option value=0 name="Aucun manager">Aucun manager</option>
                @foreach (NoviaReport.Models.User user in ViewData["ManagerList"] as List<NoviaReport.Models.User>)
                {
                    bool managerIsChecked = false;
                    if (Model.ManagerId.Equals(user.Id))
                    {
                        managerIsChecked = true;
                    }
                    <option value=@user.Id name="ManagerId" selected=@managerIsChecked>@user.Lastname</option>
                }
            </select>
            <br />

            <input type="submit" value="Ajouter" />
        </fieldset>
        <a href="/home/index">Pour le moment retour vers l'index -> Changer ce lien pour un lien vers le dashboard de l'admin</a>
        //lien à modif quand le dashboard de l'admin sera créé
    }
    @*<script type="text/javascript" src="~/Scripts/jquery-3.3.1.js"></script>
    <script type="text/javascript" src="~/Scripts/jquery.validate-vsdoc.js"></script>
    <script type="text/javascript" src="~/Scripts/jquery.validate.unobtrusive.js"></script>*@
</body>
</html>